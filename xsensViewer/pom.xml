<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jamdev</groupId>
	<artifactId>xsensViewer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<description>Views sensor data via serial from attached devices</description>


	<repositories>
		<!--  Project repo to hold the custom jar files that are not available in Maven.  Do
		this so that we don't have to do the extra step of manually installing jar files in the local repo -->
		<repository>
			<id>repo</id>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>file://${project.basedir}/repo</url>
		</repository>
	</repositories>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		
		
		
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>16</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jfxtras/jmetro -->
		<dependency>
			<groupId>org.interactivemesh</groupId>
			<artifactId>stl</artifactId>
			<version>1.0.0</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.jfxtras/jmetro -->
		<dependency>
			<groupId>org.jfxtras</groupId>
			<artifactId>jmetro</artifactId>
    		<version>11.6.16</version>
    	</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fazecast/jSerialComm -->
		<dependency>
			<groupId>com.fazecast</groupId>
			<artifactId>jSerialComm</artifactId>
			<version>2.9.2</version>
		</dependency>

		<dependency>
			<groupId>io.github.typhon0</groupId>
			<artifactId>AnimateFX</artifactId>
			<version>1.2.3</version>
		</dependency>


		<dependency>
			<groupId>org.fxyz3d</groupId>
			<artifactId>fxyz3d</artifactId>
			<version>0.5.4</version>
		</dependency>


		<dependency>
			<groupId>org.fxyz3d</groupId>
			<artifactId>fxyz-importers</artifactId>
			<version>0.5.3</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx -->
		<dependency>
		    <groupId>org.controlsfx</groupId>
		    <artifactId>controlsfx</artifactId>
		    <version>11.1.2</version>
		</dependency>



	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.8</version>
				<configuration>
					<mainClass>HelloFX</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>16</source>
					<target>16</target>
					<release>16</release>
					<!-- -The bit below prevents jar from being implemented -->
					<!-- <compilerId>jdt</compilerId> <compilerArguments> <properties>.settings/org.eclipse.jdt.core.prefs</properties> 
						make sure to use same params as what Eclipse uses </compilerArguments> -->
				</configuration>
			</plugin>

			<plugin>
				<!-- Build an executable JAR -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>false</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>main.SensorMainLauncher</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.4.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<!-- <source>8</source> <detectJavaApiLink>false</detectJavaApiLink> -->
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>
</project>